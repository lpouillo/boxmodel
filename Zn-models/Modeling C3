

#!/usr/bin/python
# -*- coding: utf-8 -*-
''' 
Programme permettant de calculer les delta finaux pour les réservoirs (ici RBC)de zinc
en fonction de l'absorption intestinale et du coefficient de fractionnement lors de l'absorption.
'''

from scipy.integrate import odeint
from random import gauss
from pylab import *

# Definition de la fonction d'evolution
def evol_ratio(ratio,t):
  rationew=np.zeros(ratio.size)
	for ii in range(ratio.size):
		outflux=0;
		influx=0;
		for jj in range(ratio.size):
			# le nouveau ratio est calcule a partir des flux entrants et sortants
			outflux = outflux + flux[ii][jj]/Mass[ii]*array_coeff[ii][jj]*ratio[ii]
			influx = influx + flux[jj][ii]/Mass[ii]*array_coeff[jj][ii]*ratio[jj]
		rationew[ii]= influx - outflux
	return rationew;

''' 
Parametres communs a chaque simulation 
'''

Ratio_standard_JMC=0.0637 # rapport isotopique du standard JMC
n_timestep=100000
time = np.linspace(0, 13870.0, n_timestep) # temps

# Conditions initiales des boites
#Delta={"diet": 0.5e0, "plasma": 0.17e0, "RBC": 0.42e0, "liver": -1.05e0, "urine": 0.17e0, "feces": 0.4e0, "muscle": -0.4e0, "bone": 0.55e0, "skin": -0.18e0, "kidney":-0.7e0}
#Delta={"diet": -0.1e0, "plasma": 0.0e0, "RBC": 0.5e0, "liver": 0e0, "urine": 0.0e0, "feces": 0.0e0, "muscle": 0.0e0, "bone": 0.0e0, "skin": 0.0e0, "kidney":0e0}
#Boxes=Delta.keys()
#Delta=array(Delta.values())
#Ratio=[];
#for ii in range(Delta.size):
	#Ratio.append((Delta[ii]/1e3+1e0)*Ratio_standard_JMC)
#Ratio=array(Ratio);

Mass={"diet": 1e12,  "plasma": 3e0, "RBC": 2.5e1, "liver": 1.3e2, "urine": 1e-10, "feces": 1e-0, "muscle": 1.5e3, "bone": 7.7e2, "skin": 1.6e2, "kidney":2e1}
Boxes=Mass.keys()
print Boxes
Mass=array(Mass.values())


# Coefficients de partage
coeff_DP=1.00018e0;
#coeff_KU=1/0.9993e0;
coeff_KU=1/0.9998e0;
coeff_PRBC=1.00025e0
coeff_PS=1.000275;
coeff_PM=0.99986;
coeff_PB=1.0003;
coeff_PL=0.99939;
#coeff_PD=1.00025;
coeff_PD=1.000;

data_coeff={
		"diet": {"diet":1.0, "plasma": coeff_DP, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone": 1e0, "skin": 1e0, "kidney":1e0},
		"plasma": {"diet":1.0, "plasma": 1e0, "RBC": coeff_PRBC, "liver": coeff_PL, "urine": 1e0, "feces": coeff_PD, "muscle": coeff_PM, "bone":coeff_PB, "skin": coeff_PS, "kidney":1/coeff_KU},
		"RBC": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1/coeff_PRBC, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"liver": {"diet": 1.0,"plasma": 1/coeff_PL, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"urine": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"feces": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"muscle": {"diet": 1.0,"plasma": 1/coeff_PM, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"bone": {"diet": 1.0,"plasma": 1/coeff_PB, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"skin": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"kidney": {"diet": 1.0,"plasma": coeff_KU, "RBC": 1e0, "liver": 1e0, "urine": coeff_KU, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0}}

# tranformation en list puis en array des coefficients de partage
list_coeff=[]
for box in data_coeff.values():
	list_coeff.append(box.values()) 
array_coeff=array(list_coeff);

''' 
Parametres specificiques pour chaque simulation
- variation de la masse du foie
- variation du flux de la diette vers le plasma
''' 
# definition de la gamme d'absorption
absorption_min=0e0
absorption_max=1e0
n_absorption=20
absorption=np.linspace(absorption_min, absorption_max, n_absorption)

Delta={"diet": 0.0, "plasma": 0.0e0, "RBC": 0.0e0, "liver": 0e0, "urine": 0.0e0, "feces": 0.0e0, "muscle": 0.0e0, "bone": 0.0e0, "skin": 0.0e0, "kidney":0e0}
Boxes=Delta.keys()
Delta=array(Delta.values())
Ratio=[];
for ii in range(Delta.size):
        Ratio.append((Delta[ii]/1e3+1e0)*Ratio_standard_JMC)
Ratio=array(Ratio);

flux_diet=12


t=0.3e0



# definition de la gamme de coeff
coeff_min=0.9996e0
coeff_max=1.0004e0
n_coeff=20
coeff_DP=np.linspace(coeff_min, coeff_max, n_coeff)

flux_FB=0.005;


# Creation du tableau pour recevoir les donnees abscisse premier, ordonnee dans le range()
delta_RBC_final= [[None] * n_absorption for i in range(n_coeff)]
#delta_bone_final= [[None] * n_flux for i in range(n_delta)]

## Debut des simulations 
for i_coeff in range(coeff_DP.size):
	# boucle sur le premier parametre
	x=coeff_DP[i_coeff]
	print x
	data_coeff={
		"diet": {"diet":1.0, "plasma": coeff_DP[i_coeff], "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone": 1e0, "skin": 1e0, "kidney":1e0},
		"plasma": {"diet":1.0, "plasma": 1e0, "RBC": coeff_PRBC, "liver": coeff_PL, "urine": 1e0, "feces": coeff_PD, "muscle": coeff_PM, "bone":coeff_PB, "skin": coeff_PS, "kidney":1/coeff_KU},
		"RBC": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1/coeff_PRBC, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"liver": {"diet": 1.0,"plasma": 1/coeff_PL, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"urine": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"feces": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"muscle": {"diet": 1.0,"plasma": 1/coeff_PM, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"bone": {"diet": 1.0,"plasma": 1/coeff_PB, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"skin": {"diet": 1.0,"plasma": 1e0, "RBC": 1e0, "liver": 1e0, "urine": 1e0, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0},
		"kidney": {"diet": 1.0,"plasma": coeff_KU, "RBC": 1e0, "liver": 1e0, "urine": coeff_KU, "feces": 1e0, "muscle": 1e0, "bone":1e0, "skin": 1e0, "kidney":1e0}}



        for i_absorption in range(absorption.size):
        # boucle sur le second parametre
                k=absorption[i_absorption]
                #print k
		
                Ratio=[];
                for ii in range(Delta.size):
                        Ratio.append((Delta[ii]/1e3+1e0)*Ratio_standard_JMC)
                Ratio=array(Ratio);
		
		# Flux entre les boites

                data_flux={
                        "diet": {"diet": 0.0, "plasma": k*flux_diet, "RBC": 0e0, "liver": 0e0, "urine": 0e0, "feces": (1-k)*flux_diet, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
			"plasma": {"diet": 0.0, "plasma": 0e0, "RBC": 0.18e0, "liver": 2.64e0, "urine": 0e0, "feces": 0.75*k*flux_diet, "muscle": 0.0035e0, "bone": flux_FB, "skin": 0.125*k*flux_diet, "kidney":0.625*k*flux_diet},
                        "RBC": {"diet": 0.0,"plasma": 0.18e0, "RBC": 0e0, "liver": 0.0e0, "urine": 0e0, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
                        "liver": {"diet": 0.0,"plasma": 2.64e0, "RBC": 0e0, "liver": 0e0, "urine": 0e0, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
                        "urine": {"diet": 0.0,"plasma": 0e0, "RBC": 0e0, "liver": 0e0, "urine": 0e0, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
                        "feces": {"diet": 0.0, "plasma": 0e0, "RBC": 0e0, "liver": 0e0, "urine": 0e0, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
                        "muscle": {"diet": 0.0,"plasma": 0.0035e0, "RBC": 0e0, "liver": 0e0, "urine": 0e0, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
                        "bone": {"diet": 0.0, "plasma": flux_FB, "RBC": 0e0, "liver": 0e0, "urine": 0e0, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
                        "skin": {"diet": 0.0, "plasma": 0e0, "RBC": 0e0, "liver": 0e0, "urine": 0e0, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0},
                        "kidney": {"diet": 0.0,"plasma": 0.5*k*flux_diet, "RBC": 0e0, "liver": 0e0, "urine": 0.125*k*flux_diet, "feces": 0e0, "muscle": 0e0, "bone": 0e0, "skin": 0e0, "kidney":0e0}}

                # tranformation en list puis en array
		list_flux=[]
		for box in data_flux.values():
			list_flux.append(box.values())
		flux=array(list_flux);
		
		Ratio=odeint(evol_ratio,Ratio,time)
		
                delta_RBC_final[i_coeff][i_absorption]=((Ratio[n_timestep-1][4]/Ratio_standard_JMC)-1.0)*1000;
                #delta_bone_final[i_delta][i_flux]=((Ratio[n_timestep-1][7]/Ratio_standard_JMC)-1.0)*1000;

ok=666
                    # creation des premières figures
#V=arange(-0.1,1.8,0.1)
print ok
p1=contourf(absorption,coeff_DP, delta_RBC_final)
#p2=imshow(delta_RBC_final)
#p2=contourf(delta_D,flux_FB,delta_bone_final)
#xlabel(r"Menses $(mg.day^{-1})$")

ylabel(r"coeff_diet")
xlabel(r"$absorption)$")

colorbar(fraction=0.1)
show()
                    

		
#xlabel(r"Nombre de jours")
#ylabel(r"$\delta^{66}Zn$$(permil)$")

plt.show()
